/**
 * ShipBob Developer API
 * ShipBob Developer API Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ShipBobOrdersPresentationModelsCreateOrderModelProductsInner } from '../models/ShipBobOrdersPresentationModelsCreateOrderModelProductsInner';
import { ShipBobOrdersPresentationModelsFinancials } from '../models/ShipBobOrdersPresentationModelsFinancials';
import { ShipBobOrdersPresentationViewModelsRecipientInfoViewModel } from '../models/ShipBobOrdersPresentationViewModelsRecipientInfoViewModel';
import { ShipBobOrdersPresentationViewModelsRetailerProgramDataViewModel } from '../models/ShipBobOrdersPresentationViewModelsRetailerProgramDataViewModel';
import { ShipBobOrdersPresentationViewModelsShippingTermsViewModel } from '../models/ShipBobOrdersPresentationViewModelsShippingTermsViewModel';
import { ShipBobOrdersPresentationViewModelsTagViewModel } from '../models/ShipBobOrdersPresentationViewModelsTagViewModel';
import { ShipbobOrdersCommonOrderType } from '../models/ShipbobOrdersCommonOrderType';
import { HttpFile } from '../http/http';

export class ShipBobOrdersPresentationModelsCreateOrderModel {
    /**
    * Client-defined shipping method matching what the user has listed as the shipping method on the Ship Option Mapping setup page in the ShipBob Merchant Portal. If they donâ€™t match, we will create a new one and default it to Standard
    */
    'shippingMethod'?: string;
    'recipient': ShipBobOrdersPresentationViewModelsRecipientInfoViewModel;
    /**
    * Products included in the order. Products identified by reference_id must also include the product name if there is no matching ShipBob product.
    */
    'products': Array<ShipBobOrdersPresentationModelsCreateOrderModelProductsInner>;
    /**
    * Unique and immutable order identifier from your upstream system
    */
    'referenceId'?: string;
    /**
    * User friendly orderId or store order number that will be shown on the Orders Page. If not provided, referenceId will be used
    */
    'orderNumber'?: string | null;
    'type'?: ShipbobOrdersCommonOrderType;
    /**
    * Key value pair array to store extra information at the order level for API purposes. ShipBob won\'t display the info in the ShipBob Merchant Portal or react based on this data.
    */
    'tags'?: Array<ShipBobOrdersPresentationViewModelsTagViewModel> | null;
    /**
    * Date this order was purchase by the end user
    */
    'purchaseDate'?: Date | null;
    /**
    * Desired Fulfillment Center Location ID. If not specified, ShipBob will determine the location that fulfills this order.
    */
    'locationId'?: number | null;
    'shippingTerms'?: ShipBobOrdersPresentationViewModelsShippingTermsViewModel;
    'retailerProgramData'?: ShipBobOrdersPresentationViewModelsRetailerProgramDataViewModel;
    /**
    * Gift message associated with the order
    */
    'giftMessage'?: string | null;
    'financials'?: ShipBobOrdersPresentationModelsFinancials;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "shippingMethod",
            "baseName": "shipping_method",
            "type": "string",
            "format": ""
        },
        {
            "name": "recipient",
            "baseName": "recipient",
            "type": "ShipBobOrdersPresentationViewModelsRecipientInfoViewModel",
            "format": ""
        },
        {
            "name": "products",
            "baseName": "products",
            "type": "Array<ShipBobOrdersPresentationModelsCreateOrderModelProductsInner>",
            "format": ""
        },
        {
            "name": "referenceId",
            "baseName": "reference_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "orderNumber",
            "baseName": "order_number",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ShipbobOrdersCommonOrderType",
            "format": ""
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<ShipBobOrdersPresentationViewModelsTagViewModel>",
            "format": ""
        },
        {
            "name": "purchaseDate",
            "baseName": "purchase_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "locationId",
            "baseName": "location_id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "shippingTerms",
            "baseName": "shipping_terms",
            "type": "ShipBobOrdersPresentationViewModelsShippingTermsViewModel",
            "format": ""
        },
        {
            "name": "retailerProgramData",
            "baseName": "retailer_program_data",
            "type": "ShipBobOrdersPresentationViewModelsRetailerProgramDataViewModel",
            "format": ""
        },
        {
            "name": "giftMessage",
            "baseName": "gift_message",
            "type": "string",
            "format": ""
        },
        {
            "name": "financials",
            "baseName": "financials",
            "type": "ShipBobOrdersPresentationModelsFinancials",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ShipBobOrdersPresentationModelsCreateOrderModel.attributeTypeMap;
    }

    public constructor() {
    }
}


