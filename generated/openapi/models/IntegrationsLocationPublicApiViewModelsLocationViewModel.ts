/**
 * ShipBob Developer API
 * ShipBob Developer API Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IntegrationsLocationPublicApiViewModelsFulfillmentCenterRegionViewModel } from '../models/IntegrationsLocationPublicApiViewModelsFulfillmentCenterRegionViewModel';
import { IntegrationsLocationPublicApiViewModelsServiceViewModel } from '../models/IntegrationsLocationPublicApiViewModelsServiceViewModel';
import { HttpFile } from '../http/http';

export class IntegrationsLocationPublicApiViewModelsLocationViewModel {
    /**
    * Id of the location in ShipBobâ€™s database
    */
    'id'?: number;
    /**
    * Name of the location. Follows the naming convention City (State Code)  for domestic FCs and City (Country Code) for international FCs
    */
    'name'?: string | null;
    /**
    * Abbreviation of the location. Combination of nearest Airport Code and the sequence number.
    */
    'abbreviation'?: string | null;
    /**
    * Time zone of the location
    */
    'timezone'?: string | null;
    /**
    * Indicates if the location is operationally active or inactive
    */
    'isActive'?: boolean;
    /**
    * Indicates if the receiving is enabled for FC
    */
    'isReceivingEnabled'?: boolean;
    /**
    * Indicates if the shipping is enabled for FC
    */
    'isShippingEnabled'?: boolean;
    /**
    * Indicates whether or not the user is authorized to interact at all with the location
    */
    'accessGranted'?: boolean;
    /**
    * Available attributes for the location
    */
    'attributes'?: Array<string> | null;
    /**
    * Services provided by the location
    */
    'services'?: Array<IntegrationsLocationPublicApiViewModelsServiceViewModel> | null;
    'region'?: IntegrationsLocationPublicApiViewModelsFulfillmentCenterRegionViewModel;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "abbreviation",
            "baseName": "abbreviation",
            "type": "string",
            "format": ""
        },
        {
            "name": "timezone",
            "baseName": "timezone",
            "type": "string",
            "format": ""
        },
        {
            "name": "isActive",
            "baseName": "is_active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isReceivingEnabled",
            "baseName": "is_receiving_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isShippingEnabled",
            "baseName": "is_shipping_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "accessGranted",
            "baseName": "access_granted",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "services",
            "baseName": "services",
            "type": "Array<IntegrationsLocationPublicApiViewModelsServiceViewModel>",
            "format": ""
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "IntegrationsLocationPublicApiViewModelsFulfillmentCenterRegionViewModel",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return IntegrationsLocationPublicApiViewModelsLocationViewModel.attributeTypeMap;
    }

    public constructor() {
    }
}
