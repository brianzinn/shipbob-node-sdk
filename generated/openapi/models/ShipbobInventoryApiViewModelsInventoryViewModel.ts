/**
 * ShipBob Developer API
 * ShipBob Developer API Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ShipbobInventoryApiViewModelsDimensionViewModel } from '../models/ShipbobInventoryApiViewModelsDimensionViewModel';
import { ShipbobInventoryApiViewModelsFulfillmentCenterQuantityViewModel } from '../models/ShipbobInventoryApiViewModelsFulfillmentCenterQuantityViewModel';
import { ShipbobInventoryApiViewModelsLotQuantityViewModel } from '../models/ShipbobInventoryApiViewModelsLotQuantityViewModel';
import { ShipbobInventoryDomainModelsPackagingAttribute } from '../models/ShipbobInventoryDomainModelsPackagingAttribute';
import { HttpFile } from '../http/http';

/**
* Information about an inventory item
*/
export class ShipbobInventoryApiViewModelsInventoryViewModel {
    /**
    * Unique id of the inventory item
    */
    'id'?: number;
    /**
    * Name of the inventory item
    */
    'name'?: string | null;
    /**
    * True if the inventory item is marked as a digital item
    */
    'isDigital'?: boolean;
    /**
    * True if the inventory item is marked as case pick
    */
    'isCasePick'?: boolean;
    /**
    * True if this inventory item is organized into lots
    */
    'isLot'?: boolean;
    'dimensions'?: ShipbobInventoryApiViewModelsDimensionViewModel;
    /**
    * Total fulfillable quantity of this inventory item
    */
    'totalFulfillableQuantity'?: number;
    /**
    * Total onhand quantity of this inventory item
    */
    'totalOnhandQuantity'?: number;
    /**
    * Total committed quantity of this inventory item
    */
    'totalCommittedQuantity'?: number;
    /**
    * Total quantity that can be sold without overselling the inventory item.  This is calculated by subtracting the total exception quantity from the  fulfillable quantity.
    */
    'totalSellableQuantity'?: number;
    /**
    * Total quantity in unreceived receiving orders for this inventory item
    */
    'totalAwaitingQuantity'?: number;
    /**
    * The total quantity of all items that are contained within orders that  are in exception/out of stock status. Out of stock orders have not been  processed and therefore do not have lot or fulfillment centers assigned.
    */
    'totalExceptionQuantity'?: number;
    /**
    * The total quantity of all items that are in the process of internal transit   between ShipBob fulfillment centers. These items are not pickable or fulfillable  until they have been received and moved to the \"On Hand\" quantity of the destination FC.  Internal transit quantities for each FC represent the incoming transfer stock  for that specific location.
    */
    'totalInternalTransferQuantity'?: number;
    /**
    * The amount of the item you need to send to ShipBob to fulfill all exception orders containing   the item. This is the exception_quantity less the fulfillable_quantity of the item.
    */
    'totalBackorderedQuantity'?: number;
    /**
    * Whether the inventory is active or not
    */
    'isActive'?: boolean;
    /**
    * Fulfillable quantity of this inventory item broken down by fulfillment center location
    */
    'fulfillableQuantityByFulfillmentCenter'?: Array<ShipbobInventoryApiViewModelsFulfillmentCenterQuantityViewModel> | null;
    /**
    * Fulfillable quantity of this inventory item broken down by lot
    */
    'fulfillableQuantityByLot'?: Array<ShipbobInventoryApiViewModelsLotQuantityViewModel> | null;
    'packagingAttribute'?: ShipbobInventoryDomainModelsPackagingAttribute;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "isDigital",
            "baseName": "is_digital",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isCasePick",
            "baseName": "is_case_pick",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isLot",
            "baseName": "is_lot",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "dimensions",
            "baseName": "dimensions",
            "type": "ShipbobInventoryApiViewModelsDimensionViewModel",
            "format": ""
        },
        {
            "name": "totalFulfillableQuantity",
            "baseName": "total_fulfillable_quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalOnhandQuantity",
            "baseName": "total_onhand_quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalCommittedQuantity",
            "baseName": "total_committed_quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalSellableQuantity",
            "baseName": "total_sellable_quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalAwaitingQuantity",
            "baseName": "total_awaiting_quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalExceptionQuantity",
            "baseName": "total_exception_quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalInternalTransferQuantity",
            "baseName": "total_internal_transfer_quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalBackorderedQuantity",
            "baseName": "total_backordered_quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "isActive",
            "baseName": "is_active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "fulfillableQuantityByFulfillmentCenter",
            "baseName": "fulfillable_quantity_by_fulfillment_center",
            "type": "Array<ShipbobInventoryApiViewModelsFulfillmentCenterQuantityViewModel>",
            "format": ""
        },
        {
            "name": "fulfillableQuantityByLot",
            "baseName": "fulfillable_quantity_by_lot",
            "type": "Array<ShipbobInventoryApiViewModelsLotQuantityViewModel>",
            "format": ""
        },
        {
            "name": "packagingAttribute",
            "baseName": "packaging_attribute",
            "type": "ShipbobInventoryDomainModelsPackagingAttribute",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ShipbobInventoryApiViewModelsInventoryViewModel.attributeTypeMap;
    }

    public constructor() {
    }
}


