/**
 * ShipBob Developer API
 * ShipBob Developer API Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ShipbobProductsApiViewModelsPublicBundleRootInformationViewModel } from '../models/ShipbobProductsApiViewModelsPublicBundleRootInformationViewModel';
import { ShipbobProductsApiViewModelsPublicChannelViewModel } from '../models/ShipbobProductsApiViewModelsPublicChannelViewModel';
import { ShipbobProductsApiViewModelsPublicFulfillmentCenterQuantityViewModel } from '../models/ShipbobProductsApiViewModelsPublicFulfillmentCenterQuantityViewModel';
import { ShipbobProductsApiViewModelsPublicInventoryItemViewModel } from '../models/ShipbobProductsApiViewModelsPublicInventoryItemViewModel';
import { HttpFile } from '../http/http';

export class ShipbobProductsApiViewModelsPublicProductViewModel {
    /**
    * Unique identifier of the product
    */
    'id'?: number;
    /**
    * Unique reference identifier of the product
    */
    'referenceId'?: string | null;
    'bundleRootInformation'?: ShipbobProductsApiViewModelsPublicBundleRootInformationViewModel;
    /**
    * Date the product was created
    */
    'createdDate'?: Date;
    'channel'?: ShipbobProductsApiViewModelsPublicChannelViewModel;
    /**
    * Stock keeping unit for the product
    */
    'sku'?: string | null;
    /**
    * The name of the product
    */
    'name'?: string | null;
    /**
    * Barcode for the product
    */
    'barcode'?: string | null;
    /**
    * Global Trade Item Number - unique and internationally recognized identifier assigned to item by company GS1.
    */
    'gtin'?: string | null;
    /**
    * Universal Product Code - Unique external identifier
    */
    'upc'?: string | null;
    /**
    * The price of one unit
    */
    'unitPrice'?: number | null;
    /**
    * Total fulfillable quantity of this product
    */
    'totalFulfillableQuantity'?: number;
    /**
    * Total on hand quantity of this product
    */
    'totalOnhandQuantity'?: number;
    /**
    * Total committed quantity of this product
    */
    'totalCommittedQuantity'?: number;
    /**
    * The inventory that this product will resolve to when packing a shipment
    */
    'fulfillableInventoryItems'?: Array<ShipbobProductsApiViewModelsPublicInventoryItemViewModel> | null;
    /**
    * Fulfillable quantity of this product broken down by fulfillment center location
    */
    'fulfillableQuantityByFulfillmentCenter'?: Array<ShipbobProductsApiViewModelsPublicFulfillmentCenterQuantityViewModel> | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "referenceId",
            "baseName": "reference_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "bundleRootInformation",
            "baseName": "bundle_root_information",
            "type": "ShipbobProductsApiViewModelsPublicBundleRootInformationViewModel",
            "format": ""
        },
        {
            "name": "createdDate",
            "baseName": "created_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "channel",
            "baseName": "channel",
            "type": "ShipbobProductsApiViewModelsPublicChannelViewModel",
            "format": ""
        },
        {
            "name": "sku",
            "baseName": "sku",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "barcode",
            "baseName": "barcode",
            "type": "string",
            "format": ""
        },
        {
            "name": "gtin",
            "baseName": "gtin",
            "type": "string",
            "format": ""
        },
        {
            "name": "upc",
            "baseName": "upc",
            "type": "string",
            "format": ""
        },
        {
            "name": "unitPrice",
            "baseName": "unit_price",
            "type": "number",
            "format": "double"
        },
        {
            "name": "totalFulfillableQuantity",
            "baseName": "total_fulfillable_quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalOnhandQuantity",
            "baseName": "total_onhand_quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "totalCommittedQuantity",
            "baseName": "total_committed_quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "fulfillableInventoryItems",
            "baseName": "fulfillable_inventory_items",
            "type": "Array<ShipbobProductsApiViewModelsPublicInventoryItemViewModel>",
            "format": ""
        },
        {
            "name": "fulfillableQuantityByFulfillmentCenter",
            "baseName": "fulfillable_quantity_by_fulfillment_center",
            "type": "Array<ShipbobProductsApiViewModelsPublicFulfillmentCenterQuantityViewModel>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ShipbobProductsApiViewModelsPublicProductViewModel.attributeTypeMap;
    }

    public constructor() {
    }
}
